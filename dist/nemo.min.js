angular.module("nemo",[]).config(["nemoInputDirectiveCreatorProvider","nemoValidationDirectiveCreatorProvider","nemoUtilsProvider","captchaProvider","checkboxProvider","serverValidationProvider",function(a,b,c,d,e,f){a.input("text",{template:'<input type="text" />',defaultValue:""}).input("dropdown",{template:'<select data-ng-options="option.value as option.text for option in model.options"><option value="">Please select...</option></select>',defaultValue:""}).input("hidden",{template:'<input type="hidden" ng-value="model.value" />',defaultValue:""}).input("password",{template:'<input type="password" />',defaultValue:""}).input("email",{template:'<input type="text" />',defaultValue:""}).input("checkbox",e).input("captcha",d),b.validation("required",{validateFn:function(a,b,c,d){return b.value?!d.$isEmpty(a):!0}}).validation("inlist",{validateFn:function(a,b){return a?c.contains(b.value,a):!0}}).validation("pattern",{validateFn:function(a,b){return a?new RegExp(b.value).test(a):!0}}).validation("notpattern",{validateFn:function(a,b){return a?!new RegExp(b.value).test(a):!0}}).validation("mustnotcontain",{validateFn:function(a,b,c){var d=c.getFieldValue(b.value,!0);return a&&d?a.toLowerCase().indexOf(d.toLowerCase())<0:!0}}).validation("mustmatch",{validateFn:function(a,b,c){var d=c.getFieldValue(b.value,!0);return a?a===d:!0}}).validation("mustmatchcaseinsensitive",{validateFn:function(a,b,c){var d=c.getFieldValue(b.value,!0);return a&&d?a.toLowerCase()===d.toLowerCase():!0}}).validation("minlength",{validateFn:function(a,b){return a&&b?a.length>=b.value:!0}}).validation("maxlength",{validateFn:function(a,b){return a&&b?a.length<=b.value:!0}}).validation("email",{validateFn:function(a,b){return a&&b.value?new RegExp(/^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i).test(a):!0}}).validation("mustbeequal",{validateFn:function(a,b){return a||a===!1?a===b.value:!0}}).validation("dependentpattern",{validateFn:function(a,b,c){var d=c.getFieldValue(b.value,!0),e=b.patterns[d];return a?new RegExp(e,"i").test(a):!0}}).validation("dependentrequired",{validateFn:function(a,b,d,e){var f=d.getFieldValue(b.value,!0),g=c.contains(b.when,f);return g?!e.$isEmpty(a):!0}}).validation("server",f)}]),angular.module("nemo").provider("nemoMessages",[function(){function a(a,b){c[a]=b}function b(a){return c[a]}var c={};return{set:a,get:b,$get:function(){return{set:a,get:b}}}}]),angular.module("nemo").provider("nemoUtils",["nemoMessagesProvider",function(a){"use strict";function b(a){return a.charAt(0).toUpperCase()+a.slice(1)}function c(a,b){var c=!1;return a&&a.length&&angular.forEach(a,function(a){c=c||b===a}),c}function d(a,b,c){var d,e,f,g,h;return function(){f=this,e=arguments,g=new Date;var i=function(){var j=new Date-g;b>j?d=setTimeout(i,b-j):(d=null,c||(h=a.apply(f,e)))},j=c&&!d;return d||(d=setTimeout(i,b)),j&&(h=a.apply(f,e)),h}}function e(b,c,d,e){var g=d.model.name+c;a.set(g,b),e.$setValidity(g,!1),f(d,e,g)}function f(a,b,c){var d=a.$watch(function(){return b.$viewValue},function(a,e){a!==e&&(b.$setValidity(c,!0),d())})}return{capitalise:b,contains:c,debounce:d,forceServerInvalid:e,$get:function(){return{capitalise:b,contains:c,debounce:d}}}}]),angular.module("nemo").provider("captcha",["nemoUtilsProvider",function(a){return{template:'<div class="nemo-captcha"><img class="nemo-captcha-img" ng-src="{{captchaModel.getImageUri()}}"><div class="nemo-captcha-play" ng-click="playAudio($event)"></div><p class="nemo-captcha-refresh" ng-click="refreshCaptcha($event)">{{getRequestCaptchaCopy()}}</p><input class="nemo-captcha-input" type="text" ng-model="model.value" name="captchaInput" placeholder="{{model.properties.placeholder.message}}" ng-focus="setActiveCaptchaField()" ng-blur="setTouchedCaptchaField()"><audio class="nemo-captcha-audio" ng-src="{{captchaModel.getAudioUri()}}">Your browser does not support audio</audio></div>',linkFn:function(a,b,c,d){var e=d[0],f=d[1],g=a.$watch("model.value",function(a,b){a!==b&&(e.$setDirty(),g())});a.updateCaptchaId=function(a){f.setFieldValue("captchaId",a)},a.playAudio=function(a){a.stopPropagation(),a.preventDefault(),b.find("audio")[0].play()},a.setActiveCaptchaField=function(){f.setActiveField(a.model.name)},a.setTouchedCaptchaField=function(){e.$setTouched()}},fieldInterfaceFns:function(b,c,d){return{setFocus:function(){c.find("input")[0].focus()},forceServerInvalid:function(c,e){b.refreshCaptcha(),a.forceServerInvalid(c,e,b,d)}}},controller:"CaptchaCtrl",$get:{}}}]),angular.module("nemo").provider("checkbox",[function(){return{template:'<div tabindex="0" data-ng-click="toggle()" data-ng-keyup="toggleIfEnter($event)" data-ng-class="{checked: isChecked, focused: isFocused()}"><label class="tick" data-ng-show="isChecked">âœ”</label><input type="text" data-ng-focus="setFocus()" data-ng-blur="releaseFocus()" style="position: absolute; top: 0; left: 0; width: 0; height: 0; opacity: 0; cursor: pointer; font-size: 0; color: transparent; text-indent: 100%; padding: 0; border: none;" /></div>',defaultValue:!1,linkFn:function(a,b,c,d){function e(b){a.isChecked=b,h.setFieldValue(j,b)}function f(){h.setActiveField(j)}var g=d[0],h=d[1],i=a.model.value,j=a.model.name,k=!1;e(i===!0||"true"===i),a.isFocused=function(){return k&&g.isActive},a.toggle=function(){e(!a.isChecked),a.setFocus(),h.setFieldDirtyTouched(j)},a.toggleIfEnter=function(b){var c=32;b.which===c&&a.toggle()},a.setFocus=function(){k=!0,f()},a.releaseFocus=function(){k=!1,h.setFieldDirtyTouched(j)}},$get:angular.noop}}]),angular.module("nemo").provider("nemoInputDirectiveCreator",["$compileProvider","nemoUtilsProvider",function(a,b){"use strict";function c(a){var b,c;return b=document.createElement("div"),b.innerHTML=a,c=b.firstChild,c.setAttribute("ng-model","model.value"),c.setAttribute("ng-focus","setActiveField()"),c.setAttribute("name","{{model.name}}"),c.setAttribute("id","{{model.id || model.name}}"),c.setAttribute("placeholder","{{model.properties.placeholder.message}}"),b.innerHTML}function d(a,b,c){var d=a.model.name,e=a.$watch(function(){return b.getFieldValue(d)},function(a){void 0===c||null!==a&&void 0!==a||b.setFieldValue(d,c),e()})}function e(a,b,c,d,e,f,g){(g||angular.noop)(a,b,c,d,e,f)}function f(a,b,c){a.$watch(function(){return b.$viewValue},function(d,e){a.$evalAsync(function(){d!==e&&(b.forcedValidityValue=void 0,c.validateForm())})})}function g(a,b,c,g){return function(j,k,l,m){var n=m[0],o=m[1],p=m[2];f(j,n,o);var q=i(j,k,n,o,g,a.fieldInterfaceFns);q.setupBusinessRules(),e(j,k,l,m,b,c,a.linkFn),d(j,o,a.defaultValue),h(j,o,p)}}function h(a,b,c){var d=c?[c.$name,a.model.name]:a.model.name;a.setActiveField=function(){b.setActiveField(d)}}function i(a,b,c,d,e,f){var g=j(a,b,c,d,e),h=f?f(a,b,c,d):{};return angular.extend(g,h),d.registerField(a.model.name,g),g}function j(a,c,d,e,f){return{activeFieldChange:function(b){k(a,d,b)},releaseActive:function(){d.isActive=!1},isActive:function(){return d.isActive},isValid:function(){return d.$valid},isTouched:function(){return d.$touched},hasHelp:function(){return a.model.properties&&a.model.properties.help&&a.model.properties.help.message},setFocus:function(){c[0].focus(),e.setActiveField(a.model.name)},getValue:function(){return d.$viewValue},setValue:function(a){d.$setViewValue(a),d.$render()},getNgModelCtrl:function(){return d},setFilthy:function(){d.$setDirty(),d.$setTouched()},setupBusinessRules:function(){a.model.properties&&a.model.properties.businessrules&&(b.contains(a.model.properties.businessrules,"noAutocomplete")&&c.attr("autocomplete","off"),b.contains(a.model.properties.businessrules,"noPaste")&&c.attr("onPaste","return false;"))},forceServerInvalid:function(c,e){b.forceServerInvalid(c,e,a,d)}}}function k(a,b,c){b.isActive=l(a.model.name,c)}function l(a,b){return"string"==typeof b?m(a,b):"object"==typeof b?n(a,b):void 0}function m(a,b){return b===a}function n(a,b){for(var c=!1,d=0;d<b.length;d++)if(b[d]===a){c=!0;break}return c}function o(a,b,d,e){return{require:["ngModel","^nemoFormHandler","?^^ngModel"],template:c(a.template),replace:!0,restrict:"A",link:g(a,b,d,e),controller:a.controller}}function p(c,d){return a.directive.apply(null,["input"+b.capitalise(c),["$compile","$http","nemoMessages",function(a,b,c){return o(d,a,b,c)}]]),this}return{input:p,$get:angular.noop}}]),angular.module("nemo").provider("serverValidation",function(){return{linkFn:function(a,b,c,d,e){var f=d[0];a.$watch(function(){return f.$viewValue},function(a,b){a!==b&&e.forceValid()})},$get:{}}}),angular.module("nemo").provider("nemoValidationDirectiveCreator",["$compileProvider","nemoUtilsProvider",function(a,b){function c(a,b,c,d){var e;return e=void 0!==c.forcedValidityValue?c.forcedValidityValue:angular.isFunction(a)?a(c.$viewValue,b,d,c):!c.$error[b.id]}function d(a,b,d,e,f){b.$validators[a.id]=function(){return c(e,a,b,d)},f.set(a.id,a.message)}function e(a,b,c){b.registerValidationRule(a.id,c)}function f(a,b,c,d,e,f){var h=g(b,c,d,e),i=f.validationRuleInterfaceFns?f.validationRuleInterfaceFns(a,d):{};return angular.extend(h,i),h}function g(a,b,c,d){return{forceInvalid:function(){h(c,b.id,!1)},forceValid:function(){h(c,b.id,!0)},refreshValidity:function(){i(a,b,c,d)}}}function h(a,b,c){a.$setValidity(b,c),a.forcedValidityValue=c}function i(a,b,d,e){var f=c(a,b,d,e);d.$setValidity(b.id,f)}function j(a,b,c,g){return function(h,i,j,k){var l=h.$eval(j[b]),m=k[0],n=k[1];l.forEach(function(b){var l=f(h,c,b,m,n,a);d(b,m,n,c,g),e(b,n,l),a.linkFn&&a.linkFn(h,i,j,k,l)})}}function k(a,b,c,d){return{require:["ngModel","^nemoFormHandler"],restrict:"A",link:j(a,b,c,d)}}function l(c,d){m(c,d);var e="validation"+b.capitalise(c);return a.directive.apply(null,[e,["nemoMessages",function(a){return k(d,e,d.validateFn,a)}]]),this}function m(a,b){o[a]=b}function n(a){return o[a]}var o={};return{validation:l,$get:function(){return{getValidationOptions:n}}}}]),angular.module("nemo").service("Captcha",["$http","CaptchaModel",function(a,b){function c(c){return a.post(c.href).then(function(a){return b.create(a.data)})}return{getCaptcha:c}}]),angular.module("nemo").controller("CaptchaCtrl",["$scope","Captcha","nemoUtils",function(a,b,c){function d(){return a.model.value="",b.getCaptcha(a.model.action).then(function(b){a.captchaModel=b,a.updateCaptchaId(a.captchaModel.getId())})}var e=c.debounce(d,1e3,!0);a.refreshCaptcha=function(a){return a&&(a.stopPropagation(),a.preventDefault()),e()},a.getRequestCaptchaCopy=function(){return a.model.action.properties.actionsubmit.message},d()}]),angular.module("nemo").factory("CaptchaModel",["$sce",function(a){function b(a){var b=this;this.data=a,this.data.links&&this.data.links.forEach(function(a){a.rel.forEach(function(c){b.data[c]=a})})}return b.prototype={getImageUri:function(){return this.data.captchaImage.href},getAudioUri:function(){return a.trustAsResourceUrl(this.data.captchaAudio.href)},getId:function(){return this.data.properties.captchaId}},{create:function(a){return new b(a)}}}]),angular.module("nemo").controller("nemoFormHandlerCtrl",["$scope","$timeout","$element",function(a,b,c){function d(a,b){return f(a,i,b)}function e(a,b){return f(a,j,b)}function f(a,b,c){var d=b[a];if(d)return d;if(c)return{};throw new Error(a+" is not registered in the form.")}function g(a,b,c){return d(a,c)[b]||angular.noop}function h(a,b,c){return e(a,c)[b]||angular.noop}var i={},j={},k=[];this.getFieldsValues=function(){var a={};return angular.forEach(i,function(b,c){a[c]=b.getValue()}),a},this.setFieldValue=function(a,b,c){g(a,"setValue",c)(b)},this.getFieldValue=function(a,b){return g(a,"getValue",b)()},this.isFieldValid=function(a,b){return g(a,"isValid",b)()},this.isFieldTouched=function(a,b){return g(a,"isTouched",b)()},this.hasHelp=function(a,b){return g(a,"hasHelp",b)()},this.isFieldActive=function(a,b){return g(a,"isActive",b)()},this.getFieldNgModelCtrl=function(a,b){return g(a,"getNgModelCtrl",b)()},this.forceInvalid=function(a,b){h(a,"forceInvalid",b)(a)},this.forceServerFieldInvalid=function(a,b,c,d){return g(a,"forceServerInvalid",d)(b,c)},this.setActiveField=function(a,b){angular.forEach(i,function(c,d){g(d,"activeFieldChange",b)(a)})},this.releaseActiveField=function(a,b){g(a,"releaseActive",b)(a)},this.setFieldDirtyTouched=function(a,b){g(a,"setFilthy",b)()},this.validateFormAndSetDirtyTouched=function(){angular.forEach(j,function(a){a.refreshValidity()}),angular.forEach(i,function(a){a.setFilthy()})},this.validateForm=function(a){angular.forEach(j,function(b,c){h(c,"refreshValidity",a)()})},this.giveFieldFocus=function(a,b){g(a,"setFocus",b)()},this.giveFirstInvalidFieldFocus=function(){b(function(){angular.element(c).find("input.ng-invalid,select.ng-invalid,.field.ng-invalid input, .field.ng-invalid select").first().focus()})},this.registerField=function(a,b){i[a]=b,k.push(a)},this.registerValidationRule=function(a,b){j[a]=b}}]).directive("nemoFormHandler",[function(){return{require:["nemoFormHandler","form"],controller:"nemoFormHandlerCtrl",link:function(a,b,c,d){var e=d[0],f=d[1];e.isFormValid=function(){return f.$valid}}}}]),angular.module("nemo").directive("nemoInput",["$compile","nemoValidationDirectiveCreator",function(a,b){function c(a){return a.replace(/([A-Z])/g,function(a){return"-"+a.toLowerCase()})}function d(){return angular.element("<div></div>")}function e(a,b){b[0].setAttribute("input-"+c(a),"")}function f(a,b,d){var e="validation-"+c(a.type),f="model.properties.validation["+d+"].rules";b[0].setAttribute(e,f)}function g(a,c){var d=b.getValidationOptions(a.type);d&&angular.isFunction(d.preCompileFn)&&d.preCompileFn(c)}function h(a,b){b&&a[0].setAttribute("autofocus","true")}function i(a,b){a.replaceWith(b)}function j(b,c){a(b)(c)}function k(a,b){var c=a&&a.validation;c&&c.length&&c.forEach(function(a,c){f(a,b,c),g(a,b)})}function l(){return function(a,b){var c=d();e(a.model.type,c),h(c,a.hasFocus),k(a.model.properties,c),i(b,c),j(c,a)}}return{transclude:"element",restrict:"E",scope:{model:"=",hasFocus:"="},link:l()}}]),angular.module("nemo").directive("nemoHelpMessages",["$compile",function(a){return{scope:{fieldName:"@",help:"=model"},template:'<div class="help-messages">{{help.message}}</div>',link:function(b,c){var d=b.help.code.replace(/\./g,"-"),e=angular.element("<div></div>");e.attr(d,!0),e.attr("field-name","{{fieldName}}"),e.attr("help","help"),angular.element(c.children()[0]).append(e),a(e)(b)}}}]),angular.module("nemo").directive("nemoIcon",["$sce",function(a){return{template:'<div class="field-icon field-icon_{{type}} field-icon_{{fieldName}}" data-ng-mouseover="onHover(fieldName)" data-ng-mouseleave="onBlur(fieldName)" data-ng-show="type" ng-bind-html="getText(type)"></div>',replace:!0,scope:{fieldName:"@",type:"@",onHover:"&",onBlur:"&"},link:function(b){b.getText=function(b){var c=" ";switch(b){case"valid":c="&#10004;";break;case"error":c="!";break;case"help":c="?"}return a.trustAsHtml(c)}}}}]),angular.module("nemo").directive("nemoValidationMessages",["nemoMessages",function(a){return{scope:{validation:"=model"},template:'<div data-t-validation-code="{{validationCode}}" class="validation-messages">{{getValidationMessage()}}</div>',link:function(b){b.getValidationMessage=function(){for(var c in b.validation.$error)if(b.validation.$error.hasOwnProperty(c))return b.validationCode=c,a.get(c)}}}}]);